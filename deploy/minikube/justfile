set fallback

kubeconfig_file := "kubeconfig.generated"

kubeconfig:
  #!python
  import subprocess
  import os
  
  file_path = "{{kubeconfig_file}}"
  path = os.path.dirname(file_path)
  kubeconfig = subprocess.run("kubectl config view", capture_output=True, text=True)
  
  if path != "" and not os.path.exists(path):
      os.makedirs(path)
  
  with open(file_path, 'w') as file:
      file.write(kubeconfig.stdout)

kubeconfig-delete:
  #!python
  import os
  
  file = "{{kubeconfig_file}}"
  if os.path.exists(file):
    os.remove(file)

minikube-start:
  minikube start \
  --extra-config=kubelet.authentication-token-webhook=true \
  --extra-config=kubelet.authorization-mode=Webhook \
  --extra-config=scheduler.bind-address=0.0.0.0 \
  --extra-config=controller-manager.bind-address=0.0.0.0

minikube-delete:
  minikube delete

minikube-restart: minikube-delete minikube-start  