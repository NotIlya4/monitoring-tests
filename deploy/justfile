default_junkfile_path := "junkfile.generated"

_default:
  just --list

_remove:
  #!python
  import os
  import shutil
  import subprocess
  from gitignore_parser import parse_gitignore
  
  path = "{{default_junkfile_path}}"
  matches = parse_gitignore(path)
  
  tobe_deleted_files = []
  tobe_deleted_dirs = []
  
  for root, dirs, files in os.walk(".", topdown=False):
      def make_full_path(root, name):
          return os.path.abspath(os.path.join(root, name))
  
      for name in files:
          full_path = make_full_path(root, name)
          if matches(full_path):
              tobe_deleted_files.append(full_path)
  
      for name in dirs:
          full_path = make_full_path(root, name)
          if matches(full_path):
              tobe_deleted_dirs.append(full_path)
  
  for full_path in tobe_deleted_dirs:
      if os.path.exists(full_path):
          shutil.rmtree(full_path)
  
  for full_path in tobe_deleted_files:
      if os.path.exists(full_path):
          os.remove(full_path)
  
  subprocess.run("just _remove-junkfile", capture_output=True)

# Removes all files generated by terraform including tfstate
remove-all:
  #!python
  import os
  import subprocess
  
  path = "{{default_junkfile_path}}"
  content = """
  .terraform*
  *.generated*
  *.tfstate*
  """
  
  with open(path, "w") as file:
    file.write(content)
    
  subprocess.run("just _remove")

# Removes files during terragrunt apply
remove-generated:
  #!python
  import os
  import subprocess
  
  path = "{{default_junkfile_path}}"
  content = """
  *.generated*
  """
  
  with open(path, "w") as file:
    file.write(content)
    
  subprocess.run("just _remove")

# Removes files generated during terraform init
remove-init:
  #!python
  import os
  import subprocess
  
  path = "{{default_junkfile_path}}"
  content = """
  .terraform*
  """
  
  with open(path, "w") as file:
    file.write(content)
    
  subprocess.run("just _remove")

# Removes tfstate files
remove-tfstate:
  #!python
  import os
  import subprocess
  
  path = "{{default_junkfile_path}}"
  content = """
  *.tfstate*
  """
  
  with open(path, "w") as file:
    file.write(content)
    
  subprocess.run("just _remove")

# Forwards prometheus grafana and myapp
forward:
  kubectl port-forward service/prometheus-prometheus -n monitoring 9090:9090 & kubectl port-forward service/grafana -n monitoring 3000:3000 & kubectl port-forward service/myapp -n myapp 5000:5000

# Applies all terraform modules
apply:
  terragrunt run-all apply --terragrunt-non-interactive

# Inits all terraform modules
init:
  terragrunt run-all init --terragrunt-non-interactive

# Destroys all terraform module
destroy:
  terragrunt run-all destroy --terragrunt-non-interactive

ping:
  k6 run ./ping-myapp.js -u 100 -d 10m

_remove-junkfile:
  rm {{default_junkfile_path}}